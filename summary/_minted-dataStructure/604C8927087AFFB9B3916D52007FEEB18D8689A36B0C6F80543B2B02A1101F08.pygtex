\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kd}{public} \PYG{k+kt}{int} \PYG{o}{[]} \PYG{n}{countSubgraphsForEachDiameter}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{n}\PYG{o}{,} \PYG{k+kt}{int}\PYG{o}{[][]} \PYG{n}{edges}\PYG{o}{)} \PYG{o}{\PYGZob{}}
    \PYG{n}{ans} \PYG{o}{=} \PYG{k}{new} \PYG{k+kt}{int} \PYG{o}{[}\PYG{n}{n}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{];}
    \PYG{k}{for} \PYG{o}{(}\PYG{k+kt}{int} \PYG{o}{[]} \PYG{n}{i} \PYG{o}{:} \PYG{n}{edges}\PYG{o}{)} \PYG{o}{\PYGZob{}} \PYG{c+c1}{// if our node is 5, we store it as 1 \PYGZlt{}\PYGZlt{} 4 which is 2\PYGZca{}4}
        \PYG{n}{graph}\PYG{o}{.}\PYG{n+na}{computeIfAbsent}\PYG{o}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{o}{(}\PYG{n}{i}\PYG{o}{[}\PYG{l+m+mi}{0}\PYG{o}{]\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{),} \PYG{n}{ArrayList}\PYG{o}{::}\PYG{k}{new}\PYG{o}{).}\PYG{n+na}{add}\PYG{o}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{o}{(}\PYG{n}{i}\PYG{o}{[}\PYG{l+m+mi}{1}\PYG{o}{]\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{));}
        \PYG{n}{graph}\PYG{o}{.}\PYG{n+na}{computeIfAbsent}\PYG{o}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{o}{(}\PYG{n}{i}\PYG{o}{[}\PYG{l+m+mi}{1}\PYG{o}{]\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{),} \PYG{n}{ArrayList}\PYG{o}{::}\PYG{k}{new}\PYG{o}{).}\PYG{n+na}{add}\PYG{o}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{o}{(}\PYG{n}{i}\PYG{o}{[}\PYG{l+m+mi}{0}\PYG{o}{]\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{));}
    \PYG{o}{\PYGZcb{}}
    \PYG{k+kt}{int} \PYG{n}{range} \PYG{o}{=} \PYG{o}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{n}\PYG{o}{)} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{o}{;}  \PYG{c+c1}{// (int)Math.pow(2, n) \PYGZhy{} 1;}
    \PYG{k}{for} \PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{subset} \PYG{o}{=} \PYG{l+m+mi}{3}\PYG{o}{;} \PYG{n}{subset} \PYG{o}{\PYGZlt{}=} \PYG{n}{range}\PYG{o}{;} \PYG{n}{subset}\PYG{o}{++)} \PYG{o}{\PYGZob{}}
        \PYG{k+kt}{boolean} \PYG{n}{isPowerOf2} \PYG{o}{=} \PYG{n}{subset} \PYG{o}{!=} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{o}{(}\PYG{n}{subset} \PYG{o}{\PYGZam{}} \PYG{o}{(}\PYG{n}{subset} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{o}{))} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{o}{;} \PYG{c+c1}{// is power of 2}
        \PYG{k}{if} \PYG{o}{(}\PYG{n}{isPowerOf2}\PYG{o}{)} \PYG{k}{continue}\PYG{o}{;}      \PYG{c+c1}{// Single node subtrees can be excluded.}
        \PYG{n}{max} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;} \PYG{n}{vis} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;}
        \PYG{n}{dfs}\PYG{o}{(}\PYG{n}{subset}\PYG{o}{,} \PYG{n}{Integer}\PYG{o}{.}\PYG{n+na}{highestOneBit}\PYG{o}{(}\PYG{n}{subset}\PYG{o}{),} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{);} \PYG{c+c1}{// Integer.highestOneBit(subset): subset: 0b1100, highest: 0b1000}
        \PYG{k}{if} \PYG{o}{(}\PYG{n}{vis} \PYG{o}{==} \PYG{n}{subset}\PYG{o}{)}   \PYG{c+c1}{// If visited is not equal to our current subset, all nodes are not reachable.}
            \PYG{n}{ans}\PYG{o}{[}\PYG{n}{max} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{o}{]} \PYG{o}{++;} \PYG{c+c1}{// In otherwords is not a proper subtree, hence dont include in the maxwer}
    \PYG{o}{\PYGZcb{}}
    \PYG{k}{return} \PYG{n}{ans}\PYG{o}{;}
\PYG{o}{\PYGZcb{}}
\PYG{n}{Map}\PYG{o}{\PYGZlt{}}\PYG{n}{Integer}\PYG{o}{,} \PYG{n}{List}\PYG{o}{\PYGZlt{}}\PYG{n}{Integer}\PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{graph} \PYG{o}{=} \PYG{k}{new} \PYG{n}{HashMap}\PYG{o}{\PYGZlt{}\PYGZgt{}();}
\PYG{k+kt}{int} \PYG{n}{max} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{,} \PYG{n}{vis} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;}
\PYG{k+kt}{int} \PYG{o}{[]} \PYG{n}{ans}\PYG{o}{;}
\PYG{k+kd}{private} \PYG{k+kt}{int} \PYG{n+nf}{dfs}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{subset}\PYG{o}{,} \PYG{k+kt}{int} \PYG{n}{cur}\PYG{o}{,} \PYG{k+kt}{int} \PYG{n}{pre}\PYG{o}{)} \PYG{o}{\PYGZob{}}
    \PYG{k}{if} \PYG{o}{((}\PYG{n}{subset} \PYG{o}{\PYGZam{}} \PYG{n}{cur}\PYG{o}{)} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{o}{)} \PYG{k}{return} \PYG{l+m+mi}{0}\PYG{o}{;} \PYG{c+c1}{// 只遍历子集中存在的节点，换句话说，只遍历子集中存在的边，这样总图只建一遍就可以了}
    \PYG{n}{vis} \PYG{o}{=} \PYG{n}{vis} \PYG{o}{|} \PYG{n}{cur}\PYG{o}{;}
    \PYG{k+kt}{int} \PYG{n}{fstMax} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{,} \PYG{n}{sndMax} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;}
    \PYG{k}{for} \PYG{o}{(}\PYG{n}{Integer} \PYG{n}{next} \PYG{o}{:} \PYG{n}{graph}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{n}{cur}\PYG{o}{))} \PYG{o}{\PYGZob{}}
        \PYG{k}{if} \PYG{o}{(}\PYG{n}{next} \PYG{o}{==} \PYG{n}{pre}\PYG{o}{)} \PYG{k}{continue}\PYG{o}{;}
        \PYG{k+kt}{int} \PYG{n}{dist} \PYG{o}{=} \PYG{n}{dfs}\PYG{o}{(}\PYG{n}{subset}\PYG{o}{,} \PYG{n}{next}\PYG{o}{,} \PYG{n}{cur}\PYG{o}{);}
        \PYG{k}{if} \PYG{o}{(}\PYG{n}{dist} \PYG{o}{\PYGZgt{}} \PYG{n}{fstMax}\PYG{o}{)} \PYG{o}{\PYGZob{}}
            \PYG{n}{sndMax} \PYG{o}{=} \PYG{n}{fstMax}\PYG{o}{;}
            \PYG{n}{fstMax} \PYG{o}{=} \PYG{n}{dist}\PYG{o}{;}
        \PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{n}{sndMax} \PYG{o}{=} \PYG{n}{Math}\PYG{o}{.}\PYG{n+na}{max}\PYG{o}{(}\PYG{n}{sndMax}\PYG{o}{,} \PYG{n}{dist}\PYG{o}{);}
    \PYG{o}{\PYGZcb{}}
    \PYG{n}{max} \PYG{o}{=} \PYG{n}{Math}\PYG{o}{.}\PYG{n+na}{max}\PYG{o}{(}\PYG{n}{max}\PYG{o}{,} \PYG{n}{fstMax} \PYG{o}{+} \PYG{n}{sndMax}\PYG{o}{);} \PYG{c+c1}{// top two distances from this node c}
\PYG{c+c1}{// top distance this cur node to any leaf is topdistance from c\PYGZsq{}s children + 1. Adding 1 since we need to include cur node}
    \PYG{k}{return} \PYG{l+m+mi}{1} \PYG{o}{+} \PYG{n}{fstMax}\PYG{o}{;}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
