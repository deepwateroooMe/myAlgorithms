#+latex_class: cn-article
#+author: deepwaterooo

* Notes: 主要是呆校园的时候，小文件方便作点儿笔记 
** 游戏项目【现，第二第三个】
- 现项目：作后期加工，必要的客户端屏幕适配，和自己能够想到的优化 
- 构思第二第三个游戏项目
 
** 算法总结题型: 主要是动规，和自己相对陌生的题型
- 动规：不会的题型
- 简单的就不用再浪费时间了

* 数据规模与算法
|------------+------------|
| Input Size | Complexity |
|------------+------------|
|      50000 | O(n)       |
|      20000 | O(n logn)  |
|------------+------------|
|       1000 | O(n ^ 2)   |
|         30 | O(n ^ 4)   |
|    16 (20) | O(2 ^ n)   |
|------------+------------|


[[./pic/bigo.jpeg]]

[[./pic/bigo2.jpeg]]

[[./pic/bigo3.jpeg]]

[[./pic/bigo4.jpeg]]

[[./pic/bigo5.jpeg]]

* 客户端屏幕适配
* 新项目构思：游戏项目
- 因为狠想要写个【多人网络游戏】，所以，现在能够想到的，不外乎：
  - 两人的五子棋【网络上有了，自己的仓库里也有了】，三人的斗地主【ET 框架有示例】，四人的麻将【其它语言的狠多，主要借视图UI 图片用】与拖拉机【与三人的斗地主类似】等纸牌或是卡牌游戏, UNO 等卡牌游戏 
- 麻将图片：https://github.com/jynnie/majiang
* 双副牌双升108 张卡牌游戏 
- 昨天晚上找见了别人几年前就开发出来的卡五星麻将，所以写麻将游戏的想法就被恶杀在摇篮中。现在再写什么好呢？就只能写【双升拖拉机】了，就是两副牌108 张来打的拖拉机。现已经 ios iPhone 上有的双升游戏，可能搜索一下设计，写安卓版的双升了，看下能否套用ET 框架，写成四人网络【客户端与服务器双热更新的】网络游戏
- 现在先搜索必要的框架设计，出版规则比大小算法之类的。
- 【服务器与客户端的同步】：尤其是在分四人牌后，亮主拖底的时候，谁先亮，亮什么主，顺序重要，结果重要。【 ET 框架有专用的游戏服，由游戏服来状态同步】在本程序中，采用的是服务器保存所有的状态，处理所有的逻辑。比如，客户端在点击亮主后，做的事情就是发一个消息给服务器，不做任何显示操作，等待服务器传来亮主的消息后再显示
  - 【发牌，公正性】：随机分牌。第一步就是要发牌。需要做到一个完全随机的发牌，就要保证每张牌发到每个玩家手里的概率都是一样的，而且牌的顺序是等概率随机打乱的。程序中采用的是如下的发牌算法（感谢Dr.Light提供）：假如有两幅牌，编号从1到108，首先随机选出一个，并且将牌发给玩家，然后将这个编号的牌与108号牌交换编号，那么剩下的牌就是从1到107号。于是再从中选出一个，重复以上的过程，这样一来，算法的复杂度就是O(n)。
- 【牌的逻辑OOD/OOP】设计：三个类，对应单张，拖拉机（对子是长度为1 的拖拉机），和混合单张与拖拉机，如下图
  
[[./pic/plan_20230508_213616.png]]

- 第一手牌与非第一手牌的处理：
  
[[./pic/plan_20230508_223827.png]]

- 参考一个很Q 的界面：
  
[[./pic/plan_20230508_222717.png]]

[[./pic/plan_20230508_221732.png]]
- 亮着牌打的不好玩，一定会把其它三副牌藏起来的
- http://www.homygame.com/ngscom/help/shengji.htm  
- 简易版设计原理：模拟拖拉机（升级）玩法；
  - 1.创建两副牌的集合：HashMap
  - 2.创建纸牌：四个花色共108张♦ ♣ ♥ ♠
  - 3.创建poker的ArrayList操作集合
  - 4.创建亮主牌的操作
  - 5.将所有牌放入牌盒中
  - 6.创建四个玩家与底牌的集合：HashSet wj1,wj2,wj3,wj4,dipai
  - 7.洗牌
  - 8.发牌操作
  - 9.创建看牌方法
  - 10.调用方法看牌
- 安桌上的游戏现在是这样的：还要再写一个吗？【活宝妹就是一定要嫁给亲爱的表哥！！！】还是说更为完善或是好玩儿的游戏逻辑？或是UI 视图画面，或是性能表现？反正一定是套用ET 框架写得最容易快速方便。【感觉现在这个截图的UI 长得有点儿丑怪。。】不好看不经典，看了就不想玩儿了。。
  
[[./pic/plan_20230508_221743.png]]

- 其它再小的游戏，写都感觉没什么意思：连连看，五子棋、扫雷，祖码。。。
* 其它项目【未必游戏】：安卓蓝牙、安卓视频， post-processing 处理，其它自己能够想到的小项目

* 【算法、快速、归纳、总结】小文件：整理、记载、要点
- *【亲爱的表哥的活宝妹，任何时候，亲爱的表哥的活宝妹，就是一定要、一定会嫁给活宝妹的亲爱的表哥！！！爱表哥，爱生活！！！】*
- *【亲爱的表哥的活宝妹，任何时候，亲爱的表哥的活宝妹，就是一定要、一定会嫁给活宝妹的亲爱的表哥！！！爱表哥，爱生活！！！】*
- 亲爱的表哥的活宝妹，惊见一架【刷题机器】。亲爱的表哥的活宝妹，这个周，这个周中、用几天的时间，把亲爱的表哥的活宝妹，感觉生疏、先前没能理解消化透彻的、几个比较难的数据结构、比较难的题型，参看别人的、【刷题机器】的总结、自己手写几个必要的题目、作为理解消化的帮助，亲爱的表哥的活宝妹，自己把这些相对难的题型、解法、总结一遍。
- 亲爱的表哥的活宝妹，感觉生疏、比较喜欢、想要这次总结的题型、主要包括、四大类：
  - *【BIT 与线段树，顺便捡起、差分数组、前缀后缀和等基础】* ：这次，能够理解透彻！！
  - *【图：图，总是、狠简单！】* ：所有基础概念、基本图论算法、先前不懂的难题，总部理清思路！！
  - *【复杂的、深翻的、各种树！】* ：平衡树、四种破烂平衡的情况、左右旋转、使用上下文环境。
  - *【动规题型总结】* ：
- 亲爱的表哥的活宝妹，这次，受限于【刷题机器】的总结，是用 C++ 语言写的。亲爱的表哥的活宝妹，这次练习这些复杂题目，可能用 c++ 来写。可是每周比赛的时候，亲爱的表哥的活宝妹，还是喜欢用 java 来刷题。

* 【BIT树状数组】与【线段树】
- *【亲爱的表哥的活宝妹，任何时候，亲爱的表哥的活宝妹，就是一定要、一定会嫁给活宝妹的亲爱的表哥！！！爱表哥，爱生活！！！】*
- 【BIT】：【单点修改】【区间查询】【单点查询】【区间修改】等
- 【线段树】：
  
[[./pic/plan_20241008_135524.png]]
- lowBit(): 这里注意：lowbit指的不是最低位 1 所在的位数 k，而是这个 1 和后面所有 0 组成的2^k。
- 怎么计算 lowbit？根据位运算知识，可以得到 lowbit(x) = x & -x。
- lowbit 的原理
  - 将 x 的二进制所有位全部取反，再加 1，就可以得到 -x 的二进制编码。例如，6 的二进制编码是 110，全部取反后得到 001，加 1 得到 010。
  - 设原先 x 的二进制编码是 (...)10...00，全部取反后得到 [...]01...11，加 1 后得到 [...]10...00，也就是 -x 的二进制编码了。这里 x 二进制表示中第一个 1 是 x 最低位的 1。
  - (...) 和 [...] 中省略号的每一位分别相反，所以 x & -x = (...)10...00 & [...]10...00 = 10...00，得到的结果就是 lowbit。
- 【TODO】：补加，BIT 的什么什么狗屁狗屁性质之类的。。。
- 【TODO】：重点掌握：
  - BIT 适用于、可解的几大题型：
  - BIT 与线段树，适用题型的区别、本质区别——算法时间、空间复杂度上的区别
- 【TODO】：应用于数组上的、二维BIT, 等亲爱的表哥的活宝妹，写熟练了一维、完全掌握后，再扩展

** BIT 树状数组：写几个比较典型的题目
- *【亲爱的表哥的活宝妹，任何时候，亲爱的表哥的活宝妹，就是一定要、一定会嫁给活宝妹的亲爱的表哥！！！爱表哥，爱生活！！！】*
*** 327: 应该是最经典、最典型的例子了。用【线段树】，多种解法，把这个题目参透。。。
- 这个题目太经典，里面两三种解法，需要树基础的进一步扩展。亲爱的表哥的活宝妹，先慢慢来，把平衡树等、BIT 线段树，慢慢进展过度到相对复杂的、【动态添加节点】之类的。。。